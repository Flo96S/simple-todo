@inject NavigationManager navman
@using distributedsystemsproject.Data;
@using distributedsystemsproject.Classes;

<div class="top-banner">
    <input placeholder="Title" @bind="Title"/> <br/>
    <textarea placeholder="Description" @bind="Description"></textarea><br/>
    <input placeholder="Color" @bind="Color"/> <br/>
    <input placeholder="Image" @bind="Image"/> <br/>
    <div style="width: 100%; display: flex; justify-content: center">
        <button @onclick="Create" class="btn">Create</button>
    </div>
</div>

@code {
    [Parameter]
    public Action<int> Update { get; set; }
    public string Title { get; set; } = "";
    public string Description { get; set; } = "";
    public string Color { get; set; } = "";
    public string Image { get; set; } = "";

    public async void Create()
    {
        if (Title.Length < 1 || Description.Length < 1) return;
        ApiHandler handler = new();
        bool success = await handler.CreateElement(Title, Description, Color, Image);
        if (!success) return;
        Title = "";
        Description = "";
        Color = "";
        Image = "";
        //navman.NavigateTo("/", true);
        StateHasChanged();
        Update.Invoke(1);
    }
}
